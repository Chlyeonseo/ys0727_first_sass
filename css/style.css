@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ol, ul, li {
  list-style: none;
}

a {
  text-decoration: none;
}

section {
  width: 100%;
  padding: 100px 0;
  background-color: olive;
}
section .inner {
  width: 1180px;
  margin: 0 auto;
}
section .inner:hover .wrap article {
  opacity: 1;
  transform: translateY(0px);
}
section .inner h1 {
  font-size: 22px;
  font-family: "arial";
  font-weight: bold;
  line-height: 1;
  color: #333;
  margin-bottom: 50px;
}
section .inner .wrap {
  width: 100%;
}
section .inner .wrap::after {
  content: "";
  display: block;
  clear: both;
}
section .inner .wrap article {
  width: 280px;
  float: left;
  margin-right: 20px;
  opacity: 0;
  transform: translateY(100px);
  transition: 0.5s;
}
section .inner .wrap article:nth-of-type(1) {
  transition-delay: 0.3s;
}
section .inner .wrap article:nth-of-type(2) {
  transition-delay: 0.6s;
}
section .inner .wrap article:nth-of-type(3) {
  transition-delay: 0.9s;
}
section .inner .wrap article:nth-of-type(4) {
  transition-delay: 1.2s;
}
section .inner .wrap article:nth-of-type(2n) {
  background-color: yellow;
}
section .inner .wrap article:hover .pic {
  background-color: yellow;
}
section .inner .wrap article:hover:nth-of-type(2n) {
  background-color: aqua;
}
section .inner .wrap article:last-child {
  margin-right: 0;
}
section .inner .wrap article .pic {
  width: 100%;
  height: 120px;
  background-color: #555;
  margin-bottom: 10px;
}
section .inner .wrap article h2 {
  font-size: 16px;
  font-family: "arial";
  font-weight: bold;
  line-height: 1;
  color: #555;
  margin-bottom: 0;
}
section .inner .wrap article p {
  font-size: 14px;
  font-family: "arial";
  font-weight: normal;
  line-height: 1.3;
  color: #777;
  margin-bottom: 30px;
}
section .inner .wrap article a {
  display: block;
  width: 50px;
  height: 30px;
  background-color: black;
  font-size: 12px;
  line-height: 30px;
  font-family: "arial";
  color: #fff;
  border-radius: 20px;
  text-align: center;
}

/*
사스 문법
1. 변수 설정 가능
예) $변수이름 : 속성값;

2. import
사스 파일을 분리해서 사용함으로써 유지보수에 편리함을 줌.
mixin 활용 가능
분리 시 _부분파일이름 으로 구분해주어야한다

3. neating 중첩
기존 css 처럼 부모트리를 계속 적어주는 식이 아니라 
html 방식처럼 들여쓰기로 자식을 구분해서 써줍니다.

4. 반복문이 가능
예) @for $i from 시작숫자 through 마지막숫자{반복코드를 작성}

5. mixin (사스의 핵심)
함수를 만들듯이 자주 사용하게 될 코드를 패키징해서 재활용 가능
*/

/*# sourceMappingURL=style.css.map */
